<?xml version="1.0" encoding="utf-8" ?>
<robot>
	<methods>
		<main parameter="" return="void">
		setup()
		start()
		</main>
		<moveForward parameter="int time" return="void">
		req.effort = 15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(time * 0.001)
		req.effort = -15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		</moveForward>
		<moveBackward parameter="int time" return="void">
		req.effort = -15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(time * 0.001)
		req.effort = 15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		</moveBackward>
		<turnLeft parameter="int degrees" return="void">
		req.effort = -15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.effort = 15
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		req.effort = 15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.effort = -15
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		</turnLeft>
		<turnRight parameter="int degrees" return="void">
		req.effort = 15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.effort = -15
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		req.effort = -15
		req.joint_name = 'mobile_base_2::left_wheel_hinge_2'
		resp = service_func(req)
		req.effort = 15
		req.joint_name = 'mobile_base_2::right_wheel_hinge_2'
		resp = service_func(req)
		_sleep(5)
		</turnRight>
		<idle parameter="int time" return="void">
		_sleep(time*0.001)
		</idle>
		<openGripper parameter="" return="void">
		global req
		global service_func
		req.effort = 10
		req.joint_name = 'simple_gripper_2::palm_left_finger_2'
		resp = service_func(req)
		req.joint_name = 'simple_gripper_2::left_finger_tip_2'
		resp = service_func(req)
		req.effort = -10
		req.joint_name = 'simple_gripper_2::palm_right_finger_2'
		resp = service_func(req)
		req.joint_name = 'simple_gripper_2::right_finger_tip_2'
		resp = service_func(req)
		_sleep(5)
		</openGripper>
		<closeGripper parameter="" return="void">
		req.effort = -10
		req.joint_name = 'simple_gripper_2::palm_left_finger_2'
		resp = service_func(req)
		req.joint_name = 'simple_gripper_2::left_finger_tip_2'
		resp = service_func(req)
		req.effort = 10
		req.joint_name = 'simple_gripper_2::palm_right_finger_2'
		resp = service_func(req)
		req.joint_name = 'simple_gripper_2::right_finger_tip_2'
		resp = service_func(req)
		_sleep(5)
		</closeGripper>
		<riseGripper parameter="" return="void">
		req.effort = 10
		req.joint_name = 'simple_gripper_2::palm_riser_2'
		resp = service_func(req)
		_sleep(5)
		</riseGripper>
	</methods>
	<assignments>
	</assignments>
</robot>