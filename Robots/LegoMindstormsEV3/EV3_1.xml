<?xml version="1.0" encoding="utf-8" ?>
<robot>
	<methods>
		<main parameter="" return="void">
		setup()
		start()
		</main>
		<moveForward parameter="int time" return="void">
		global rightMotor
		global leftMotor
		rightMotor.run_direct(duty_cycle_sp=40)
		leftMotor.run_direct(duty_cycle_sp=40)
		_sleep(time*0.001)
		</moveForward>
		<moveBackward parameter="int time" return="void">
		global rightMotor
		global leftMotor
		rightMotor.run_direct(duty_cycle_sp=-40)
		leftMotor.run_direct(duty_cycle_sp=-40)
		_sleep(time*0.001)
		</moveBackward>
		<turnLeft parameter="int degrees" return="void">
		global rightMotor
		global leftMotor
		rightMotor.run_direct(duty_cycle_sp=20)
		leftMotor.run_direct(duty_cycle_sp=-20)
		initial = ev3.GyroSensor().value()
		while ev3.GyroSensor().value() &gt; initial - degrees :
			_sleep(0.001)
		rightMotor.reset()
		leftMotor.reset()
		</turnLeft>
		<turnRight parameter="int degrees" return="void">
		global rightMotor
		global leftMotor
		rightMotor.run_direct(duty_cycle_sp=-20)
		leftMotor.run_direct(duty_cycle_sp=20)
		initial = ev3.GyroSensor().value()
		while ev3.GyroSensor().value() &lt; initial + degrees :
			_sleep(0.001)
		rightMotor.reset()
		leftMotor.reset()
		</turnRight>
		<idle parameter="int time" return="void">
		leftMotor.reset()
		rightMotor.reset()
		_sleep(time*0.001)
		</idle>
	</methods>
	<assignments>
	</assignments>
</robot>