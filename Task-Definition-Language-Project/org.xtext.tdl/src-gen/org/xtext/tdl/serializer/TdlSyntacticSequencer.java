/*
 * generated by Xtext 2.12.0
 */
package org.xtext.tdl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.tdl.services.TdlGrammarAccess;

@SuppressWarnings("all")
public class TdlSyntacticSequencer extends AbstractSyntacticSequencer {

	protected TdlGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Argument_CommaKeyword_1_q;
	protected AbstractElementAlias match_Parameter_CommaKeyword_1_q;
	protected AbstractElementAlias match_SimpleActionReference_CommaKeyword_1_0_1_0_2_q;
	protected AbstractElementAlias match_SimpleActionReference_CommaKeyword_1_0_1_1_3_q;
	protected AbstractElementAlias match_SimpleActionReference_CommaKeyword_1_0_1_2_3_q;
	protected AbstractElementAlias match_SimpleActionReference_CommaKeyword_1_0_1_3_3_q;
	protected AbstractElementAlias match_SimpleActionReference_LeftParenthesisRightParenthesisColonKeyword_1_2_or___LeftParenthesisKeyword_1_0_0___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q___RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1____;
	protected AbstractElementAlias match_SimpleActionReference_RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1;
	protected AbstractElementAlias match_SimpleActionReference_RightParenthesisKeyword_1_0_1_1_2_q;
	protected AbstractElementAlias match_SimpleActionReference_RightParenthesisKeyword_1_0_1_2_2_q;
	protected AbstractElementAlias match_SimpleActionReference_RightParenthesisKeyword_1_0_1_3_2_q;
	protected AbstractElementAlias match_SimpleActionReference___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q;
	protected AbstractElementAlias match_SimpleAction_LeftParenthesisRightParenthesisColonKeyword_2_2_or___LeftParenthesisKeyword_2_0_0_RightParenthesisColonKeyword_2_0_2__;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (TdlGrammarAccess) access;
		match_Argument_CommaKeyword_1_q = new TokenAlias(false, true, grammarAccess.getArgumentAccess().getCommaKeyword_1());
		match_Parameter_CommaKeyword_1_q = new TokenAlias(false, true, grammarAccess.getParameterAccess().getCommaKeyword_1());
		match_SimpleActionReference_CommaKeyword_1_0_1_0_2_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_0_2());
		match_SimpleActionReference_CommaKeyword_1_0_1_1_3_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_1_3());
		match_SimpleActionReference_CommaKeyword_1_0_1_2_3_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_2_3());
		match_SimpleActionReference_CommaKeyword_1_0_1_3_3_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_3_3());
		match_SimpleActionReference_LeftParenthesisRightParenthesisColonKeyword_1_2_or___LeftParenthesisKeyword_1_0_0___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q___RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1____ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getLeftParenthesisKeyword_1_0_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getArgsKeyword_1_0_1_3_0()), new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisKeyword_1_0_1_3_2()), new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_3_3())), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisColonKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisRightParenthesisColonKeyword_1_0_2_1()))), new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getLeftParenthesisRightParenthesisColonKeyword_1_2()));
		match_SimpleActionReference_RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisColonKeyword_1_0_2_0()), new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisRightParenthesisColonKeyword_1_0_2_1()));
		match_SimpleActionReference_RightParenthesisKeyword_1_0_1_1_2_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisKeyword_1_0_1_1_2());
		match_SimpleActionReference_RightParenthesisKeyword_1_0_1_2_2_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisKeyword_1_0_1_2_2());
		match_SimpleActionReference_RightParenthesisKeyword_1_0_1_3_2_q = new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisKeyword_1_0_1_3_2());
		match_SimpleActionReference___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSimpleActionReferenceAccess().getArgsKeyword_1_0_1_3_0()), new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getRightParenthesisKeyword_1_0_1_3_2()), new TokenAlias(false, true, grammarAccess.getSimpleActionReferenceAccess().getCommaKeyword_1_0_1_3_3()));
		match_SimpleAction_LeftParenthesisRightParenthesisColonKeyword_2_2_or___LeftParenthesisKeyword_2_0_0_RightParenthesisColonKeyword_2_0_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSimpleActionAccess().getLeftParenthesisKeyword_2_0_0()), new TokenAlias(false, false, grammarAccess.getSimpleActionAccess().getRightParenthesisColonKeyword_2_0_2())), new TokenAlias(false, false, grammarAccess.getSimpleActionAccess().getLeftParenthesisRightParenthesisColonKeyword_2_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBEGINRule())
			return getBEGINToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getENDRule())
			return getENDToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getBEGINToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	/**
	 * Synthetic terminal rule. The concrete syntax is to be specified by clients.
	 * Defaults to the empty string.
	 */
	protected String getENDToken(EObject semanticObject, RuleCall ruleCall, INode node) { return ""; }
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Argument_CommaKeyword_1_q.equals(syntax))
				emit_Argument_CommaKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Parameter_CommaKeyword_1_q.equals(syntax))
				emit_Parameter_CommaKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_CommaKeyword_1_0_1_0_2_q.equals(syntax))
				emit_SimpleActionReference_CommaKeyword_1_0_1_0_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_CommaKeyword_1_0_1_1_3_q.equals(syntax))
				emit_SimpleActionReference_CommaKeyword_1_0_1_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_CommaKeyword_1_0_1_2_3_q.equals(syntax))
				emit_SimpleActionReference_CommaKeyword_1_0_1_2_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_CommaKeyword_1_0_1_3_3_q.equals(syntax))
				emit_SimpleActionReference_CommaKeyword_1_0_1_3_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_LeftParenthesisRightParenthesisColonKeyword_1_2_or___LeftParenthesisKeyword_1_0_0___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q___RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1____.equals(syntax))
				emit_SimpleActionReference_LeftParenthesisRightParenthesisColonKeyword_1_2_or___LeftParenthesisKeyword_1_0_0___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q___RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1____(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1.equals(syntax))
				emit_SimpleActionReference_RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_RightParenthesisKeyword_1_0_1_1_2_q.equals(syntax))
				emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_1_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_RightParenthesisKeyword_1_0_1_2_2_q.equals(syntax))
				emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_2_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference_RightParenthesisKeyword_1_0_1_3_2_q.equals(syntax))
				emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_3_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleActionReference___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q.equals(syntax))
				emit_SimpleActionReference___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleAction_LeftParenthesisRightParenthesisColonKeyword_2_2_or___LeftParenthesisKeyword_2_0_0_RightParenthesisColonKeyword_2_0_2__.equals(syntax))
				emit_SimpleAction_LeftParenthesisRightParenthesisColonKeyword_2_2_or___LeftParenthesisKeyword_2_0_0_RightParenthesisColonKeyword_2_0_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=STRING (ambiguity) (rule end)
	 */
	protected void emit_Argument_CommaKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_Parameter_CommaKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=STRING (ambiguity) 'after(' after=STRING
	 *     id=STRING (ambiguity) 'args=(' arguments+=Argument
	 *     id=STRING (ambiguity) 'sync(' sync=INT
	 *     id=STRING (ambiguity) ('args=(' ')'? ','?)? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_CommaKeyword_1_0_1_0_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     sync=INT ')'? (ambiguity) 'after(' after=STRING
	 *     sync=INT ')'? (ambiguity) 'args=(' arguments+=Argument
	 *     sync=INT ')'? (ambiguity) ('args=(' ')'? ','?)? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_CommaKeyword_1_0_1_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     after=STRING ')'? (ambiguity) 'args=(' arguments+=Argument
	 *     after=STRING ')'? (ambiguity) ('args=(' ')'? ','?)? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_CommaKeyword_1_0_1_2_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     arguments+=Argument ')'? (ambiguity) ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_CommaKeyword_1_0_1_3_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ('args=(' ')'? ','?)? ('):' | ')):')) | '():'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 */
	protected void emit_SimpleActionReference_LeftParenthesisRightParenthesisColonKeyword_1_2_or___LeftParenthesisKeyword_1_0_0___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q___RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1____(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '):' | ')):'
	 *
	 * This ambiguous syntax occurs at:
	 *     after=STRING ')'? ','? ('args=(' ')'? ','?)? (ambiguity) (rule end)
	 *     arguments+=Argument ')'? ','? (ambiguity) (rule end)
	 *     id=STRING ','? ('args=(' ')'? ','?)? (ambiguity) (rule end)
	 *     sync=INT ')'? ','? ('args=(' ')'? ','?)? (ambiguity) (rule end)
	 */
	protected void emit_SimpleActionReference_RightParenthesisColonKeyword_1_0_2_0_or_RightParenthesisRightParenthesisColonKeyword_1_0_2_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ')'?
	 *
	 * This ambiguous syntax occurs at:
	 *     sync=INT (ambiguity) ','? 'after(' after=STRING
	 *     sync=INT (ambiguity) ','? 'args=(' arguments+=Argument
	 *     sync=INT (ambiguity) ','? ('args=(' ')'? ','?)? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_1_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ')'?
	 *
	 * This ambiguous syntax occurs at:
	 *     after=STRING (ambiguity) ','? 'args=(' arguments+=Argument
	 *     after=STRING (ambiguity) ','? ('args=(' ')'? ','?)? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_2_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ')'?
	 *
	 * This ambiguous syntax occurs at:
	 *     arguments+=Argument (ambiguity) ','? ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference_RightParenthesisKeyword_1_0_1_3_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('args=(' ')'? ','?)?
	 *
	 * This ambiguous syntax occurs at:
	 *     after=STRING ')'? ','? (ambiguity) ('):' | ')):') (rule end)
	 *     id=STRING ','? (ambiguity) ('):' | ')):') (rule end)
	 *     sync=INT ')'? ','? (ambiguity) ('):' | ')):') (rule end)
	 */
	protected void emit_SimpleActionReference___ArgsKeyword_1_0_1_3_0_RightParenthesisKeyword_1_0_1_3_2_q_CommaKeyword_1_0_1_3_3_q__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' '):') | '():'
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) BEGIN codeBlock=CodeBlock
	 */
	protected void emit_SimpleAction_LeftParenthesisRightParenthesisColonKeyword_2_2_or___LeftParenthesisKeyword_2_0_0_RightParenthesisColonKeyword_2_0_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
