/**
 * generated by Xtext 2.12.0
 */
package org.xtext.tdl.tdl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.tdl.tdl.ParameterList;
import org.xtext.tdl.tdl.RosNode;
import org.xtext.tdl.tdl.TdlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ros Node</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getCodeBlock <em>Code Block</em>}</li>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getNodeType <em>Node Type</em>}</li>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getNodeName <em>Node Name</em>}</li>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getNodeArgs <em>Node Args</em>}</li>
 *   <li>{@link org.xtext.tdl.tdl.impl.RosNodeImpl#getParameterList <em>Parameter List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RosNodeImpl extends MinimalEObjectImpl.Container implements RosNode
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCodeBlock() <em>Code Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCodeBlock()
   * @generated
   * @ordered
   */
  protected static final String CODE_BLOCK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCodeBlock() <em>Code Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCodeBlock()
   * @generated
   * @ordered
   */
  protected String codeBlock = CODE_BLOCK_EDEFAULT;

  /**
   * The default value of the '{@link #getNodeType() <em>Node Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeType()
   * @generated
   * @ordered
   */
  protected static final String NODE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNodeType() <em>Node Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeType()
   * @generated
   * @ordered
   */
  protected String nodeType = NODE_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getNodeName() <em>Node Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeName()
   * @generated
   * @ordered
   */
  protected static final String NODE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNodeName() <em>Node Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeName()
   * @generated
   * @ordered
   */
  protected String nodeName = NODE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getNodeArgs() <em>Node Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeArgs()
   * @generated
   * @ordered
   */
  protected static final String NODE_ARGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNodeArgs() <em>Node Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodeArgs()
   * @generated
   * @ordered
   */
  protected String nodeArgs = NODE_ARGS_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameterList() <em>Parameter List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterList()
   * @generated
   * @ordered
   */
  protected ParameterList parameterList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RosNodeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TdlPackage.Literals.ROS_NODE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCodeBlock()
  {
    return codeBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCodeBlock(String newCodeBlock)
  {
    String oldCodeBlock = codeBlock;
    codeBlock = newCodeBlock;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__CODE_BLOCK, oldCodeBlock, codeBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNodeType()
  {
    return nodeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNodeType(String newNodeType)
  {
    String oldNodeType = nodeType;
    nodeType = newNodeType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__NODE_TYPE, oldNodeType, nodeType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNodeName()
  {
    return nodeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNodeName(String newNodeName)
  {
    String oldNodeName = nodeName;
    nodeName = newNodeName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__NODE_NAME, oldNodeName, nodeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNodeArgs()
  {
    return nodeArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNodeArgs(String newNodeArgs)
  {
    String oldNodeArgs = nodeArgs;
    nodeArgs = newNodeArgs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__NODE_ARGS, oldNodeArgs, nodeArgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParameterList getParameterList()
  {
    return parameterList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterList(ParameterList newParameterList, NotificationChain msgs)
  {
    ParameterList oldParameterList = parameterList;
    parameterList = newParameterList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__PARAMETER_LIST, oldParameterList, newParameterList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameterList(ParameterList newParameterList)
  {
    if (newParameterList != parameterList)
    {
      NotificationChain msgs = null;
      if (parameterList != null)
        msgs = ((InternalEObject)parameterList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TdlPackage.ROS_NODE__PARAMETER_LIST, null, msgs);
      if (newParameterList != null)
        msgs = ((InternalEObject)newParameterList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TdlPackage.ROS_NODE__PARAMETER_LIST, null, msgs);
      msgs = basicSetParameterList(newParameterList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TdlPackage.ROS_NODE__PARAMETER_LIST, newParameterList, newParameterList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TdlPackage.ROS_NODE__PARAMETER_LIST:
        return basicSetParameterList(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TdlPackage.ROS_NODE__NAME:
        return getName();
      case TdlPackage.ROS_NODE__CODE_BLOCK:
        return getCodeBlock();
      case TdlPackage.ROS_NODE__NODE_TYPE:
        return getNodeType();
      case TdlPackage.ROS_NODE__NODE_NAME:
        return getNodeName();
      case TdlPackage.ROS_NODE__NODE_ARGS:
        return getNodeArgs();
      case TdlPackage.ROS_NODE__PARAMETER_LIST:
        return getParameterList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TdlPackage.ROS_NODE__NAME:
        setName((String)newValue);
        return;
      case TdlPackage.ROS_NODE__CODE_BLOCK:
        setCodeBlock((String)newValue);
        return;
      case TdlPackage.ROS_NODE__NODE_TYPE:
        setNodeType((String)newValue);
        return;
      case TdlPackage.ROS_NODE__NODE_NAME:
        setNodeName((String)newValue);
        return;
      case TdlPackage.ROS_NODE__NODE_ARGS:
        setNodeArgs((String)newValue);
        return;
      case TdlPackage.ROS_NODE__PARAMETER_LIST:
        setParameterList((ParameterList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TdlPackage.ROS_NODE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case TdlPackage.ROS_NODE__CODE_BLOCK:
        setCodeBlock(CODE_BLOCK_EDEFAULT);
        return;
      case TdlPackage.ROS_NODE__NODE_TYPE:
        setNodeType(NODE_TYPE_EDEFAULT);
        return;
      case TdlPackage.ROS_NODE__NODE_NAME:
        setNodeName(NODE_NAME_EDEFAULT);
        return;
      case TdlPackage.ROS_NODE__NODE_ARGS:
        setNodeArgs(NODE_ARGS_EDEFAULT);
        return;
      case TdlPackage.ROS_NODE__PARAMETER_LIST:
        setParameterList((ParameterList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TdlPackage.ROS_NODE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case TdlPackage.ROS_NODE__CODE_BLOCK:
        return CODE_BLOCK_EDEFAULT == null ? codeBlock != null : !CODE_BLOCK_EDEFAULT.equals(codeBlock);
      case TdlPackage.ROS_NODE__NODE_TYPE:
        return NODE_TYPE_EDEFAULT == null ? nodeType != null : !NODE_TYPE_EDEFAULT.equals(nodeType);
      case TdlPackage.ROS_NODE__NODE_NAME:
        return NODE_NAME_EDEFAULT == null ? nodeName != null : !NODE_NAME_EDEFAULT.equals(nodeName);
      case TdlPackage.ROS_NODE__NODE_ARGS:
        return NODE_ARGS_EDEFAULT == null ? nodeArgs != null : !NODE_ARGS_EDEFAULT.equals(nodeArgs);
      case TdlPackage.ROS_NODE__PARAMETER_LIST:
        return parameterList != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", codeBlock: ");
    result.append(codeBlock);
    result.append(", nodeType: ");
    result.append(nodeType);
    result.append(", nodeName: ");
    result.append(nodeName);
    result.append(", nodeArgs: ");
    result.append(nodeArgs);
    result.append(')');
    return result.toString();
  }

} //RosNodeImpl
