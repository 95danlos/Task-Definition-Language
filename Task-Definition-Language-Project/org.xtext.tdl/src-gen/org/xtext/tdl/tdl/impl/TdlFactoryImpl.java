/**
 * generated by Xtext 2.12.0
 */
package org.xtext.tdl.tdl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.tdl.tdl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TdlFactoryImpl extends EFactoryImpl implements TdlFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static TdlFactory init()
  {
    try
    {
      TdlFactory theTdlFactory = (TdlFactory)EPackage.Registry.INSTANCE.getEFactory(TdlPackage.eNS_URI);
      if (theTdlFactory != null)
      {
        return theTdlFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new TdlFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TdlFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case TdlPackage.MODEL: return createModel();
      case TdlPackage.COMPOSITE_TASK: return createCompositeTask();
      case TdlPackage.TASK: return createTask();
      case TdlPackage.SIMPLE_ACTION_REFERENCE: return createSimpleActionReference();
      case TdlPackage.ARGUMENT: return createArgument();
      case TdlPackage.ROBOT: return createRobot();
      case TdlPackage.INITIALIZATION_MODULE: return createInitializationModule();
      case TdlPackage.SIMPLE_ACTION: return createSimpleAction();
      case TdlPackage.PARAMETER: return createParameter();
      case TdlPackage.ROS_NODE: return createRosNode();
      case TdlPackage.PARAMETER_LIST: return createParameterList();
      case TdlPackage.PUBLISHED_DATA: return createPublishedData();
      case TdlPackage.TOPIC: return createTopic();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CompositeTask createCompositeTask()
  {
    CompositeTaskImpl compositeTask = new CompositeTaskImpl();
    return compositeTask;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Task createTask()
  {
    TaskImpl task = new TaskImpl();
    return task;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleActionReference createSimpleActionReference()
  {
    SimpleActionReferenceImpl simpleActionReference = new SimpleActionReferenceImpl();
    return simpleActionReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Argument createArgument()
  {
    ArgumentImpl argument = new ArgumentImpl();
    return argument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Robot createRobot()
  {
    RobotImpl robot = new RobotImpl();
    return robot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InitializationModule createInitializationModule()
  {
    InitializationModuleImpl initializationModule = new InitializationModuleImpl();
    return initializationModule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleAction createSimpleAction()
  {
    SimpleActionImpl simpleAction = new SimpleActionImpl();
    return simpleAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RosNode createRosNode()
  {
    RosNodeImpl rosNode = new RosNodeImpl();
    return rosNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParameterList createParameterList()
  {
    ParameterListImpl parameterList = new ParameterListImpl();
    return parameterList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PublishedData createPublishedData()
  {
    PublishedDataImpl publishedData = new PublishedDataImpl();
    return publishedData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Topic createTopic()
  {
    TopicImpl topic = new TopicImpl();
    return topic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TdlPackage getTdlPackage()
  {
    return (TdlPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static TdlPackage getPackage()
  {
    return TdlPackage.eINSTANCE;
  }

} //TdlFactoryImpl
