/*
 * generated by Xtext 2.12.0
 */
lexer grammar InternalTdlLexer;

@header {
package org.xtext.tdl.ide.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

PublishedData : 'PublishedData:';

CompositeTask : 'compositeTask';

SimpleAction : 'simpleAction';

Parameters : 'Parameters:';

LatLng : '(lat,lng):';

RosNode : 'rosNode';

After : 'after(';

Args : 'args=(';

Setup : 'setup:';

Robot : 'robot';

Sync : 'sync(';

Task : 'task';

LeftParenthesisRightParenthesisColon : '():';

RightParenthesisRightParenthesisColon : ')):';

Id : 'id=';

LeftParenthesisRightParenthesis : '()';

RightParenthesisRightParenthesis : '))';

RightParenthesisColon : '):';

Apostrophe : '\'';

LeftParenthesis : '(';

RightParenthesis : ')';

Comma : ',';

Colon : ':';

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
