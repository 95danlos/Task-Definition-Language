/*
 * generated by Xtext 2.12.0
 */
package org.xtext.tdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TdlGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCompositeTasksAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCompositeTasksCompositeTaskParserRuleCall_0_0 = (RuleCall)cCompositeTasksAssignment_0.eContents().get(0);
		private final Assignment cRobotsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRobotsRobotParserRuleCall_1_0 = (RuleCall)cRobotsAssignment_1.eContents().get(0);
		
		//Model:
		//	compositeTasks+=CompositeTask*
		//	robots+=Robot*;
		@Override public ParserRule getRule() { return rule; }
		
		//compositeTasks+=CompositeTask* robots+=Robot*
		public Group getGroup() { return cGroup; }
		
		//compositeTasks+=CompositeTask*
		public Assignment getCompositeTasksAssignment_0() { return cCompositeTasksAssignment_0; }
		
		//CompositeTask
		public RuleCall getCompositeTasksCompositeTaskParserRuleCall_0_0() { return cCompositeTasksCompositeTaskParserRuleCall_0_0; }
		
		//robots+=Robot*
		public Assignment getRobotsAssignment_1() { return cRobotsAssignment_1; }
		
		//Robot
		public RuleCall getRobotsRobotParserRuleCall_1_0() { return cRobotsRobotParserRuleCall_1_0; }
	}
	public class CompositeTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.CompositeTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLatLngKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cTasksAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTasksTaskParserRuleCall_4_0 = (RuleCall)cTasksAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//CompositeTask:
		//	"compositeTask" name=ID "(lat,lng):"
		//	BEGIN
		//	tasks+=Task*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"compositeTask" name=ID "(lat,lng):" BEGIN tasks+=Task* END
		public Group getGroup() { return cGroup; }
		
		//"compositeTask"
		public Keyword getCompositeTaskKeyword_0() { return cCompositeTaskKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"(lat,lng):"
		public Keyword getLatLngKeyword_2() { return cLatLngKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//tasks+=Task*
		public Assignment getTasksAssignment_4() { return cTasksAssignment_4; }
		
		//Task
		public RuleCall getTasksTaskParserRuleCall_4_0() { return cTasksTaskParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisRightParenthesisColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cSimpleActionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSimpleActionsSimpleActionReferenceParserRuleCall_4_0 = (RuleCall)cSimpleActionsAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Task:
		//	"task" name=ID "():"
		//	BEGIN
		//	simpleActions+=SimpleActionReference*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"task" name=ID "():" BEGIN simpleActions+=SimpleActionReference* END
		public Group getGroup() { return cGroup; }
		
		//"task"
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"():"
		public Keyword getLeftParenthesisRightParenthesisColonKeyword_2() { return cLeftParenthesisRightParenthesisColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//simpleActions+=SimpleActionReference*
		public Assignment getSimpleActionsAssignment_4() { return cSimpleActionsAssignment_4; }
		
		//SimpleActionReference
		public RuleCall getSimpleActionsSimpleActionReferenceParserRuleCall_4_0() { return cSimpleActionsSimpleActionReferenceParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class SimpleActionReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.SimpleActionReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cGroup_1_0_1.eContents().get(0);
		private final Keyword cIdKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Assignment cIdAssignment_1_0_1_0_1 = (Assignment)cGroup_1_0_1_0.eContents().get(1);
		private final RuleCall cIdSTRINGTerminalRuleCall_1_0_1_0_1_0 = (RuleCall)cIdAssignment_1_0_1_0_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Group cGroup_1_0_1_1 = (Group)cGroup_1_0_1.eContents().get(1);
		private final Keyword cSyncKeyword_1_0_1_1_0 = (Keyword)cGroup_1_0_1_1.eContents().get(0);
		private final Assignment cSyncAssignment_1_0_1_1_1 = (Assignment)cGroup_1_0_1_1.eContents().get(1);
		private final RuleCall cSyncINTTerminalRuleCall_1_0_1_1_1_0 = (RuleCall)cSyncAssignment_1_0_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_0_1_1_2 = (Keyword)cGroup_1_0_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_0_1_1_3 = (Keyword)cGroup_1_0_1_1.eContents().get(3);
		private final Group cGroup_1_0_1_2 = (Group)cGroup_1_0_1.eContents().get(2);
		private final Keyword cAfterKeyword_1_0_1_2_0 = (Keyword)cGroup_1_0_1_2.eContents().get(0);
		private final Assignment cAfterAssignment_1_0_1_2_1 = (Assignment)cGroup_1_0_1_2.eContents().get(1);
		private final RuleCall cAfterSTRINGTerminalRuleCall_1_0_1_2_1_0 = (RuleCall)cAfterAssignment_1_0_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_0_1_2_2 = (Keyword)cGroup_1_0_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_1_0_1_2_3 = (Keyword)cGroup_1_0_1_2.eContents().get(3);
		private final Group cGroup_1_0_1_3 = (Group)cGroup_1_0_1.eContents().get(3);
		private final Keyword cArgsKeyword_1_0_1_3_0 = (Keyword)cGroup_1_0_1_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_1_0_1_3_1 = (Assignment)cGroup_1_0_1_3.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_1_0_1_3_1_0 = (RuleCall)cArgumentsAssignment_1_0_1_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_0_1_3_2 = (Keyword)cGroup_1_0_1_3.eContents().get(2);
		private final Keyword cCommaKeyword_1_0_1_3_3 = (Keyword)cGroup_1_0_1_3.eContents().get(3);
		private final Alternatives cAlternatives_1_0_2 = (Alternatives)cGroup_1_0.eContents().get(2);
		private final Keyword cRightParenthesisColonKeyword_1_0_2_0 = (Keyword)cAlternatives_1_0_2.eContents().get(0);
		private final Keyword cRightParenthesisRightParenthesisColonKeyword_1_0_2_1 = (Keyword)cAlternatives_1_0_2.eContents().get(1);
		private final Assignment cPositionalAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cPositionalLatLngKeyword_1_1_0 = (Keyword)cPositionalAssignment_1_1.eContents().get(0);
		private final Keyword cLeftParenthesisRightParenthesisColonKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		
		//SimpleActionReference:
		//	name=ID ("(" (("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=("
		//	arguments+=Argument* ")"? ","?)?) ("):" | ")):") | positional="(lat,lng):"
		//	|
		//	"():");
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ("(" (("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=("
		//arguments+=Argument* ")"? ","?)?) ("):" | ")):") | positional="(lat,lng):" | "():")
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//"(" (("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=("
		//arguments+=Argument* ")"? ","?)?) ("):" | ")):") | positional="(lat,lng):" | "():"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//"(" (("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=("
		//arguments+=Argument* ")"? ","?)?) ("):" | ")):")
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_0_0() { return cLeftParenthesisKeyword_1_0_0; }
		
		//("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=(" arguments+=Argument*
		//")"? ","?)?
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//("id=" id=STRING ","?)?
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }
		
		//"id="
		public Keyword getIdKeyword_1_0_1_0_0() { return cIdKeyword_1_0_1_0_0; }
		
		//id=STRING
		public Assignment getIdAssignment_1_0_1_0_1() { return cIdAssignment_1_0_1_0_1; }
		
		//STRING
		public RuleCall getIdSTRINGTerminalRuleCall_1_0_1_0_1_0() { return cIdSTRINGTerminalRuleCall_1_0_1_0_1_0; }
		
		//","?
		public Keyword getCommaKeyword_1_0_1_0_2() { return cCommaKeyword_1_0_1_0_2; }
		
		//("sync(" sync=INT ")"? ","?)?
		public Group getGroup_1_0_1_1() { return cGroup_1_0_1_1; }
		
		//"sync("
		public Keyword getSyncKeyword_1_0_1_1_0() { return cSyncKeyword_1_0_1_1_0; }
		
		//sync=INT
		public Assignment getSyncAssignment_1_0_1_1_1() { return cSyncAssignment_1_0_1_1_1; }
		
		//INT
		public RuleCall getSyncINTTerminalRuleCall_1_0_1_1_1_0() { return cSyncINTTerminalRuleCall_1_0_1_1_1_0; }
		
		//")"?
		public Keyword getRightParenthesisKeyword_1_0_1_1_2() { return cRightParenthesisKeyword_1_0_1_1_2; }
		
		//","?
		public Keyword getCommaKeyword_1_0_1_1_3() { return cCommaKeyword_1_0_1_1_3; }
		
		//("after(" after=STRING ")"? ","?)?
		public Group getGroup_1_0_1_2() { return cGroup_1_0_1_2; }
		
		//"after("
		public Keyword getAfterKeyword_1_0_1_2_0() { return cAfterKeyword_1_0_1_2_0; }
		
		//after=STRING
		public Assignment getAfterAssignment_1_0_1_2_1() { return cAfterAssignment_1_0_1_2_1; }
		
		//STRING
		public RuleCall getAfterSTRINGTerminalRuleCall_1_0_1_2_1_0() { return cAfterSTRINGTerminalRuleCall_1_0_1_2_1_0; }
		
		//")"?
		public Keyword getRightParenthesisKeyword_1_0_1_2_2() { return cRightParenthesisKeyword_1_0_1_2_2; }
		
		//","?
		public Keyword getCommaKeyword_1_0_1_2_3() { return cCommaKeyword_1_0_1_2_3; }
		
		//("args=(" arguments+=Argument* ")"? ","?)?
		public Group getGroup_1_0_1_3() { return cGroup_1_0_1_3; }
		
		//"args=("
		public Keyword getArgsKeyword_1_0_1_3_0() { return cArgsKeyword_1_0_1_3_0; }
		
		//arguments+=Argument*
		public Assignment getArgumentsAssignment_1_0_1_3_1() { return cArgumentsAssignment_1_0_1_3_1; }
		
		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_1_0_1_3_1_0() { return cArgumentsArgumentParserRuleCall_1_0_1_3_1_0; }
		
		//")"?
		public Keyword getRightParenthesisKeyword_1_0_1_3_2() { return cRightParenthesisKeyword_1_0_1_3_2; }
		
		//","?
		public Keyword getCommaKeyword_1_0_1_3_3() { return cCommaKeyword_1_0_1_3_3; }
		
		//"):" | ")):"
		public Alternatives getAlternatives_1_0_2() { return cAlternatives_1_0_2; }
		
		//"):"
		public Keyword getRightParenthesisColonKeyword_1_0_2_0() { return cRightParenthesisColonKeyword_1_0_2_0; }
		
		//")):"
		public Keyword getRightParenthesisRightParenthesisColonKeyword_1_0_2_1() { return cRightParenthesisRightParenthesisColonKeyword_1_0_2_1; }
		
		//positional="(lat,lng):"
		public Assignment getPositionalAssignment_1_1() { return cPositionalAssignment_1_1; }
		
		//"(lat,lng):"
		public Keyword getPositionalLatLngKeyword_1_1_0() { return cPositionalLatLngKeyword_1_1_0; }
		
		//"():"
		public Keyword getLeftParenthesisRightParenthesisColonKeyword_1_2() { return cLeftParenthesisRightParenthesisColonKeyword_1_2; }
	}
	public class ArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Argument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Argument:
		//	name=STRING ","?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING ","?
		public Group getGroup() { return cGroup; }
		
		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//","?
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
	}
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRobotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cPublishedDataAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPublishedDataPublishedDataParserRuleCall_4_0 = (RuleCall)cPublishedDataAssignment_4.eContents().get(0);
		private final Assignment cInitializationModuleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInitializationModuleInitializationModuleParserRuleCall_5_0 = (RuleCall)cInitializationModuleAssignment_5.eContents().get(0);
		private final Assignment cSimpleActionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSimpleActionsSimpleActionParserRuleCall_6_0 = (RuleCall)cSimpleActionsAssignment_6.eContents().get(0);
		private final Assignment cRosNodesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRosNodesRosNodeParserRuleCall_7_0 = (RuleCall)cRosNodesAssignment_7.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//Robot:
		//	"robot" name=ID ":"
		//	BEGIN
		//	publishedData=PublishedData?
		//	initializationModule=InitializationModule?
		//	simpleActions+=SimpleAction*
		//	rosNodes+=RosNode*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"robot" name=ID ":" BEGIN publishedData=PublishedData? initializationModule=InitializationModule?
		//simpleActions+=SimpleAction* rosNodes+=RosNode* END
		public Group getGroup() { return cGroup; }
		
		//"robot"
		public Keyword getRobotKeyword_0() { return cRobotKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//publishedData=PublishedData?
		public Assignment getPublishedDataAssignment_4() { return cPublishedDataAssignment_4; }
		
		//PublishedData
		public RuleCall getPublishedDataPublishedDataParserRuleCall_4_0() { return cPublishedDataPublishedDataParserRuleCall_4_0; }
		
		//initializationModule=InitializationModule?
		public Assignment getInitializationModuleAssignment_5() { return cInitializationModuleAssignment_5; }
		
		//InitializationModule
		public RuleCall getInitializationModuleInitializationModuleParserRuleCall_5_0() { return cInitializationModuleInitializationModuleParserRuleCall_5_0; }
		
		//simpleActions+=SimpleAction*
		public Assignment getSimpleActionsAssignment_6() { return cSimpleActionsAssignment_6; }
		
		//SimpleAction
		public RuleCall getSimpleActionsSimpleActionParserRuleCall_6_0() { return cSimpleActionsSimpleActionParserRuleCall_6_0; }
		
		//rosNodes+=RosNode*
		public Assignment getRosNodesAssignment_7() { return cRosNodesAssignment_7; }
		
		//RosNode
		public RuleCall getRosNodesRosNodeParserRuleCall_7_0() { return cRosNodesRosNodeParserRuleCall_7_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_8() { return cENDTerminalRuleCall_8; }
	}
	public class InitializationModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.InitializationModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCodeBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodeBlockCodeBlockParserRuleCall_2_0 = (RuleCall)cCodeBlockAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//InitializationModule:
		//	"setup:"
		//	BEGIN
		//	codeBlock=CodeBlock
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"setup:" BEGIN codeBlock=CodeBlock END
		public Group getGroup() { return cGroup; }
		
		//"setup:"
		public Keyword getSetupKeyword_0() { return cSetupKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//codeBlock=CodeBlock
		public Assignment getCodeBlockAssignment_2() { return cCodeBlockAssignment_2; }
		
		//CodeBlock
		public RuleCall getCodeBlockCodeBlockParserRuleCall_2_0() { return cCodeBlockCodeBlockParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class SimpleActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.SimpleAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSimpleActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cParametersAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_2_0_1_0 = (RuleCall)cParametersAssignment_2_0_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cPositionalAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Keyword cPositionalLatLngKeyword_2_1_0 = (Keyword)cPositionalAssignment_2_1.eContents().get(0);
		private final Keyword cLeftParenthesisRightParenthesisColonKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cCodeBlockAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCodeBlockCodeBlockParserRuleCall_4_0 = (RuleCall)cCodeBlockAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//SimpleAction:
		//	"simpleAction" name=ID ("(" parameters+=Parameter* "):" | positional="(lat,lng):" | "():") BEGIN
		//	codeBlock=CodeBlock
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"simpleAction" name=ID ("(" parameters+=Parameter* "):" | positional="(lat,lng):" | "():") BEGIN codeBlock=CodeBlock END
		public Group getGroup() { return cGroup; }
		
		//"simpleAction"
		public Keyword getSimpleActionKeyword_0() { return cSimpleActionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"(" parameters+=Parameter* "):" | positional="(lat,lng):" | "():"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//"(" parameters+=Parameter* "):"
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_2_0_0() { return cLeftParenthesisKeyword_2_0_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_2_0_1() { return cParametersAssignment_2_0_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_0_1_0() { return cParametersParameterParserRuleCall_2_0_1_0; }
		
		//"):"
		public Keyword getRightParenthesisColonKeyword_2_0_2() { return cRightParenthesisColonKeyword_2_0_2; }
		
		//positional="(lat,lng):"
		public Assignment getPositionalAssignment_2_1() { return cPositionalAssignment_2_1; }
		
		//"(lat,lng):"
		public Keyword getPositionalLatLngKeyword_2_1_0() { return cPositionalLatLngKeyword_2_1_0; }
		
		//"():"
		public Keyword getLeftParenthesisRightParenthesisColonKeyword_2_2() { return cLeftParenthesisRightParenthesisColonKeyword_2_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//codeBlock=CodeBlock
		public Assignment getCodeBlockAssignment_4() { return cCodeBlockAssignment_4; }
		
		//CodeBlock
		public RuleCall getCodeBlockCodeBlockParserRuleCall_4_0() { return cCodeBlockCodeBlockParserRuleCall_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Parameter:
		//	name=ID ","?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ","?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//","?
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
	}
	public class RosNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.RosNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cRosNodeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisRightParenthesisColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Assignment cCodeBlockAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cCodeBlockCodeBlockParserRuleCall_0_4_0 = (RuleCall)cCodeBlockAssignment_0_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_0_5 = (RuleCall)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cRosNodeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cNodeTypeAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cNodeTypeSTRINGTerminalRuleCall_1_3_0 = (RuleCall)cNodeTypeAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cNodeNameAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cNodeNameSTRINGTerminalRuleCall_1_5_0 = (RuleCall)cNodeNameAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cCommaKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cNodeArgsAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cNodeArgsSTRINGTerminalRuleCall_1_6_1_0 = (RuleCall)cNodeArgsAssignment_1_6_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final RuleCall cBEGINTerminalRuleCall_1_8_0 = (RuleCall)cGroup_1_8.eContents().get(0);
		private final Assignment cParameterListAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cParameterListParameterListParserRuleCall_1_8_1_0 = (RuleCall)cParameterListAssignment_1_8_1.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_1_8_2 = (RuleCall)cGroup_1_8.eContents().get(2);
		
		//RosNode:
		//	"rosNode" name=ID "():"
		//	BEGIN
		//	codeBlock=CodeBlock
		//	END | "rosNode" name=ID "(" nodeType=STRING "," nodeName=STRING ("," nodeArgs=STRING)? "):" (BEGIN
		//	parameterList=ParameterList
		//	END)?;
		@Override public ParserRule getRule() { return rule; }
		
		//"rosNode" name=ID "():" BEGIN codeBlock=CodeBlock END | "rosNode" name=ID "(" nodeType=STRING "," nodeName=STRING (","
		//nodeArgs=STRING)? "):" (BEGIN parameterList=ParameterList END)?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"rosNode" name=ID "():" BEGIN codeBlock=CodeBlock END
		public Group getGroup_0() { return cGroup_0; }
		
		//"rosNode"
		public Keyword getRosNodeKeyword_0_0() { return cRosNodeKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//"():"
		public Keyword getLeftParenthesisRightParenthesisColonKeyword_0_2() { return cLeftParenthesisRightParenthesisColonKeyword_0_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0_3() { return cBEGINTerminalRuleCall_0_3; }
		
		//codeBlock=CodeBlock
		public Assignment getCodeBlockAssignment_0_4() { return cCodeBlockAssignment_0_4; }
		
		//CodeBlock
		public RuleCall getCodeBlockCodeBlockParserRuleCall_0_4_0() { return cCodeBlockCodeBlockParserRuleCall_0_4_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_0_5() { return cENDTerminalRuleCall_0_5; }
		
		//"rosNode" name=ID "(" nodeType=STRING "," nodeName=STRING ("," nodeArgs=STRING)? "):" (BEGIN parameterList=ParameterList
		//END)?
		public Group getGroup_1() { return cGroup_1; }
		
		//"rosNode"
		public Keyword getRosNodeKeyword_1_0() { return cRosNodeKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//nodeType=STRING
		public Assignment getNodeTypeAssignment_1_3() { return cNodeTypeAssignment_1_3; }
		
		//STRING
		public RuleCall getNodeTypeSTRINGTerminalRuleCall_1_3_0() { return cNodeTypeSTRINGTerminalRuleCall_1_3_0; }
		
		//","
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }
		
		//nodeName=STRING
		public Assignment getNodeNameAssignment_1_5() { return cNodeNameAssignment_1_5; }
		
		//STRING
		public RuleCall getNodeNameSTRINGTerminalRuleCall_1_5_0() { return cNodeNameSTRINGTerminalRuleCall_1_5_0; }
		
		//("," nodeArgs=STRING)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//","
		public Keyword getCommaKeyword_1_6_0() { return cCommaKeyword_1_6_0; }
		
		//nodeArgs=STRING
		public Assignment getNodeArgsAssignment_1_6_1() { return cNodeArgsAssignment_1_6_1; }
		
		//STRING
		public RuleCall getNodeArgsSTRINGTerminalRuleCall_1_6_1_0() { return cNodeArgsSTRINGTerminalRuleCall_1_6_1_0; }
		
		//"):"
		public Keyword getRightParenthesisColonKeyword_1_7() { return cRightParenthesisColonKeyword_1_7; }
		
		//(BEGIN parameterList=ParameterList END)?
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1_8_0() { return cBEGINTerminalRuleCall_1_8_0; }
		
		//parameterList=ParameterList
		public Assignment getParameterListAssignment_1_8_1() { return cParameterListAssignment_1_8_1; }
		
		//ParameterList
		public RuleCall getParameterListParameterListParserRuleCall_1_8_1_0() { return cParameterListParameterListParserRuleCall_1_8_1_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_1_8_2() { return cENDTerminalRuleCall_1_8_2; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParametersKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cCodeBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodeBlockCodeBlockParserRuleCall_2_0 = (RuleCall)cCodeBlockAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ParameterList:
		//	"Parameters:"
		//	BEGIN
		//	codeBlock=CodeBlock
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"Parameters:" BEGIN codeBlock=CodeBlock END
		public Group getGroup() { return cGroup; }
		
		//"Parameters:"
		public Keyword getParametersKeyword_0() { return cParametersKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//codeBlock=CodeBlock
		public Assignment getCodeBlockAssignment_2() { return cCodeBlockAssignment_2; }
		
		//CodeBlock
		public RuleCall getCodeBlockCodeBlockParserRuleCall_2_0() { return cCodeBlockCodeBlockParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class PublishedDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.PublishedData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPublishedDataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cTopicsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTopicsTopicParserRuleCall_2_0 = (RuleCall)cTopicsAssignment_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PublishedData:
		//	"PublishedData:"
		//	BEGIN
		//	topics+=Topic*
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//"PublishedData:" BEGIN topics+=Topic* END
		public Group getGroup() { return cGroup; }
		
		//"PublishedData:"
		public Keyword getPublishedDataKeyword_0() { return cPublishedDataKeyword_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_1() { return cBEGINTerminalRuleCall_1; }
		
		//topics+=Topic*
		public Assignment getTopicsAssignment_2() { return cTopicsAssignment_2; }
		
		//Topic
		public RuleCall getTopicsTopicParserRuleCall_2_0() { return cTopicsTopicParserRuleCall_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_3() { return cENDTerminalRuleCall_3; }
	}
	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.Topic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTopicAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTopicSTRINGTerminalRuleCall_2_0 = (RuleCall)cTopicAssignment_2.eContents().get(0);
		
		//Topic:
		//	name=ID ":" topic=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ":" topic=STRING
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//topic=STRING
		public Assignment getTopicAssignment_2() { return cTopicAssignment_2; }
		
		//STRING
		public RuleCall getTopicSTRINGTerminalRuleCall_2_0() { return cTopicSTRINGTerminalRuleCall_2_0; }
	}
	public class CodeBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.CodeBlock");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cML_COMMENTTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cANY_OTHERTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cRightParenthesisColonKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cLeftParenthesisRightParenthesisKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cApostropheKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cCommaKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cRightParenthesisRightParenthesisKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final RuleCall cCodeBlock_2ParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//CodeBlock hidden():
		//	(ID | WS | INT | STRING | ML_COMMENT | SL_COMMENT | ANY_OTHER | "(" | ")" | "):" | "()" | ":" | "'" | "," | "))" |
		//	CodeBlock_2)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(ID | WS | INT | STRING | ML_COMMENT | SL_COMMENT | ANY_OTHER | "(" | ")" | "):" | "()" | ":" | "'" | "," | "))" |
		//CodeBlock_2)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//WS
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }
		
		//ML_COMMENT
		public RuleCall getML_COMMENTTerminalRuleCall_4() { return cML_COMMENTTerminalRuleCall_4; }
		
		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }
		
		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_6() { return cANY_OTHERTerminalRuleCall_6; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//"):"
		public Keyword getRightParenthesisColonKeyword_9() { return cRightParenthesisColonKeyword_9; }
		
		//"()"
		public Keyword getLeftParenthesisRightParenthesisKeyword_10() { return cLeftParenthesisRightParenthesisKeyword_10; }
		
		//":"
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//"'"
		public Keyword getApostropheKeyword_12() { return cApostropheKeyword_12; }
		
		//","
		public Keyword getCommaKeyword_13() { return cCommaKeyword_13; }
		
		//"))"
		public Keyword getRightParenthesisRightParenthesisKeyword_14() { return cRightParenthesisRightParenthesisKeyword_14; }
		
		//CodeBlock_2
		public RuleCall getCodeBlock_2ParserRuleCall_15() { return cCodeBlock_2ParserRuleCall_15; }
	}
	public class CodeBlock_2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.CodeBlock_2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCodeBlockParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cENDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CodeBlock_2 hidden():
		//	BEGIN
		//	CodeBlock
		//	END;
		@Override public ParserRule getRule() { return rule; }
		
		//BEGIN CodeBlock END
		public Group getGroup() { return cGroup; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_0() { return cBEGINTerminalRuleCall_0; }
		
		//CodeBlock
		public RuleCall getCodeBlockParserRuleCall_1() { return cCodeBlockParserRuleCall_1; }
		
		//END
		public RuleCall getENDTerminalRuleCall_2() { return cENDTerminalRuleCall_2; }
	}
	
	
	private final ModelElements pModel;
	private final CompositeTaskElements pCompositeTask;
	private final TaskElements pTask;
	private final SimpleActionReferenceElements pSimpleActionReference;
	private final ArgumentElements pArgument;
	private final RobotElements pRobot;
	private final InitializationModuleElements pInitializationModule;
	private final SimpleActionElements pSimpleAction;
	private final ParameterElements pParameter;
	private final RosNodeElements pRosNode;
	private final ParameterListElements pParameterList;
	private final PublishedDataElements pPublishedData;
	private final TopicElements pTopic;
	private final CodeBlockElements pCodeBlock;
	private final CodeBlock_2Elements pCodeBlock_2;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TdlGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pCompositeTask = new CompositeTaskElements();
		this.pTask = new TaskElements();
		this.pSimpleActionReference = new SimpleActionReferenceElements();
		this.pArgument = new ArgumentElements();
		this.pRobot = new RobotElements();
		this.pInitializationModule = new InitializationModuleElements();
		this.pSimpleAction = new SimpleActionElements();
		this.pParameter = new ParameterElements();
		this.pRosNode = new RosNodeElements();
		this.pParameterList = new ParameterListElements();
		this.pPublishedData = new PublishedDataElements();
		this.pTopic = new TopicElements();
		this.pCodeBlock = new CodeBlockElements();
		this.pCodeBlock_2 = new CodeBlock_2Elements();
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.tdl.Tdl.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.tdl.Tdl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	compositeTasks+=CompositeTask*
	//	robots+=Robot*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//CompositeTask:
	//	"compositeTask" name=ID "(lat,lng):"
	//	BEGIN
	//	tasks+=Task*
	//	END;
	public CompositeTaskElements getCompositeTaskAccess() {
		return pCompositeTask;
	}
	
	public ParserRule getCompositeTaskRule() {
		return getCompositeTaskAccess().getRule();
	}
	
	//Task:
	//	"task" name=ID "():"
	//	BEGIN
	//	simpleActions+=SimpleActionReference*
	//	END;
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//SimpleActionReference:
	//	name=ID ("(" (("id=" id=STRING ","?)? ("sync(" sync=INT ")"? ","?)? ("after(" after=STRING ")"? ","?)? ("args=("
	//	arguments+=Argument* ")"? ","?)?) ("):" | ")):") | positional="(lat,lng):"
	//	|
	//	"():");
	public SimpleActionReferenceElements getSimpleActionReferenceAccess() {
		return pSimpleActionReference;
	}
	
	public ParserRule getSimpleActionReferenceRule() {
		return getSimpleActionReferenceAccess().getRule();
	}
	
	//Argument:
	//	name=STRING ","?;
	public ArgumentElements getArgumentAccess() {
		return pArgument;
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}
	
	//Robot:
	//	"robot" name=ID ":"
	//	BEGIN
	//	publishedData=PublishedData?
	//	initializationModule=InitializationModule?
	//	simpleActions+=SimpleAction*
	//	rosNodes+=RosNode*
	//	END;
	public RobotElements getRobotAccess() {
		return pRobot;
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}
	
	//InitializationModule:
	//	"setup:"
	//	BEGIN
	//	codeBlock=CodeBlock
	//	END;
	public InitializationModuleElements getInitializationModuleAccess() {
		return pInitializationModule;
	}
	
	public ParserRule getInitializationModuleRule() {
		return getInitializationModuleAccess().getRule();
	}
	
	//SimpleAction:
	//	"simpleAction" name=ID ("(" parameters+=Parameter* "):" | positional="(lat,lng):" | "():") BEGIN
	//	codeBlock=CodeBlock
	//	END;
	public SimpleActionElements getSimpleActionAccess() {
		return pSimpleAction;
	}
	
	public ParserRule getSimpleActionRule() {
		return getSimpleActionAccess().getRule();
	}
	
	//Parameter:
	//	name=ID ","?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//RosNode:
	//	"rosNode" name=ID "():"
	//	BEGIN
	//	codeBlock=CodeBlock
	//	END | "rosNode" name=ID "(" nodeType=STRING "," nodeName=STRING ("," nodeArgs=STRING)? "):" (BEGIN
	//	parameterList=ParameterList
	//	END)?;
	public RosNodeElements getRosNodeAccess() {
		return pRosNode;
	}
	
	public ParserRule getRosNodeRule() {
		return getRosNodeAccess().getRule();
	}
	
	//ParameterList:
	//	"Parameters:"
	//	BEGIN
	//	codeBlock=CodeBlock
	//	END;
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//PublishedData:
	//	"PublishedData:"
	//	BEGIN
	//	topics+=Topic*
	//	END;
	public PublishedDataElements getPublishedDataAccess() {
		return pPublishedData;
	}
	
	public ParserRule getPublishedDataRule() {
		return getPublishedDataAccess().getRule();
	}
	
	//Topic:
	//	name=ID ":" topic=STRING;
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}
	
	//CodeBlock hidden():
	//	(ID | WS | INT | STRING | ML_COMMENT | SL_COMMENT | ANY_OTHER | "(" | ")" | "):" | "()" | ":" | "'" | "," | "))" |
	//	CodeBlock_2)*;
	public CodeBlockElements getCodeBlockAccess() {
		return pCodeBlock;
	}
	
	public ParserRule getCodeBlockRule() {
		return getCodeBlockAccess().getRule();
	}
	
	//CodeBlock_2 hidden():
	//	BEGIN
	//	CodeBlock
	//	END;
	public CodeBlock_2Elements getCodeBlock_2Access() {
		return pCodeBlock_2;
	}
	
	public ParserRule getCodeBlock_2Rule() {
		return getCodeBlock_2Access().getRule();
	}
	
	//terminal BEGIN:
	//	'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END:
	//	'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
