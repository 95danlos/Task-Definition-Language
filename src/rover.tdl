robot rover:                      

	PublishedData:
		lat: "lat"
		lng: "lng"

	setup:
		import pigpio
		global pi
		pi = pigpio.pi()
		pi.set_mode(12, pigpio.OUTPUT)
		pi.set_mode(13, pigpio.OUTPUT)
		pi.set_PWM_frequency(12, 8000)
		pi.set_PWM_frequency(13, 8000)
		pi.set_mode(22, pigpio.OUTPUT)
		pi.set_mode(23, pigpio.OUTPUT)
		pi.set_mode(24, pigpio.OUTPUT)
		pi.set_mode(25, pigpio.OUTPUT)
		
		pi.write(22, 1)
		pi.write(23, 1)
		pi.write(24, 0)
		pi.write(25, 0)
		pi.set_PWM_dutycycle(12, 0)
		pi.set_PWM_dutycycle(13, 0)
		
		import time
		import rospy
		rospy.init_node('rover', anonymous=True)
		
		
	simpleAction moveForward(_time):
		pi.set_PWM_dutycycle(12, 150)
		pi.set_PWM_dutycycle(13, 150)
		time.sleep(float(_time) * 0.001)
		pi.set_PWM_dutycycle(12, 0)
		pi.set_PWM_dutycycle(13, 0)
	
		
	simpleAction moveBackwards(_time):
		pi.write(24, 1)
		pi.write(25, 1)
		pi.set_PWM_dutycycle(12, 150)
		pi.set_PWM_dutycycle(13, 150)
		time.sleep(float(_time) * 0.001)
		pi.set_PWM_dutycycle(12, 0)
		pi.set_PWM_dutycycle(13, 0)
		pi.write(24, 0)
		pi.write(25, 0)
		
		
	simpleAction turnLeft(degrees):
		pi.write(24, 1)
		pi.set_PWM_dutycycle(12, 150)
		pi.set_PWM_dutycycle(13, 150)
		time.sleep(float(degrees) * 0.023)
		pi.set_PWM_dutycycle(12, 0)
		pi.set_PWM_dutycycle(13, 0)
		pi.write(24, 0)
		
		
	simpleAction turnRight(degrees): 
		pi.write(25, 1)
		pi.set_PWM_dutycycle(12, 150)
		pi.set_PWM_dutycycle(13, 150)
		time.sleep(float(degrees) * 0.023)
		pi.set_PWM_dutycycle(12, 0)
		pi.set_PWM_dutycycle(13, 0)
		pi.write(25, 0)
		
		
		
	simpleAction print_(arg1, arg2):     
		print(arg1 + ", " + arg2) 
		
		
	processingNode odometry_source():
		
		import rospy
		from std_msgs.msg import String
		
		rospy.init_node('odometry_source', anonymous=True)
		
		lat_pub = rospy.Publisher("lat", String, queue_size=50)
		lng_pub = rospy.Publisher("lng", String, queue_size=50)
		
		
		r = rospy.Rate(20)
		while (not rospy.is_shutdown()):
			
			lat_pub.publish("2")
			lng_pub.publish("2")                    
		
		
			r.sleep()
		